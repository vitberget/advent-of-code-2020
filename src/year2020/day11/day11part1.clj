(ns year2020.day11.day11part1
  (:require [ysera.test :refer [is is= is-not]]
            [clojure.string :as str]))

(def ex-step-1 "L.LL.LL.LL\nLLLLLLL.LL\nL.L.L..L..\nLLLL.LL.LL\nL.LL.LL.LL\nL.LLLLL.LL\n..L.L.....\nLLLLLLLLLL\nL.LLLLLL.L\nL.LLLLL.LL")
(def ex-step-2 "#.##.##.##\n#######.##\n#.#.#..#..\n####.##.##\n#.##.##.##\n#.#####.##\n..#.#.....\n##########\n#.######.#\n#.#####.##")
(def ex-step-3 "#.LL.L#.##\n#LLLLLL.L#\nL.L.L..L..\n#LLL.LL.L#\n#.LL.LL.LL\n#.LLLL#.##\n..L.L.....\n#LLLLLLLL#\n#.LLLLLL.L\n#.#LLLL.##")
(def ex-non-changing "#.#L.L#.##\n#LLL#LL.L#\nL.#.L..#..\n#L##.##.L#\n#.#L.LL.LL\n#.#L#L#.##\n..L.L.....\n#L#L##L#L#\n#.LLLLLL.L\n#.#L#L#.##")

(defn string->state
  [string]
  (->> string
       (str/split-lines)
       (map-indexed (fn [y line] (->> line
                                      (map-indexed (fn [x char] {[x y] char}))
                                      (reduce merge))))
       (reduce merge)))

(defn count-seats-in-list
  [seats]
  {\L (->> seats
           (filter (fn [c] (= c \L)))
           (count))
   \# (->> seats
           (filter (fn [c] (= c \#)))
           (count))})

(def surrounding-seats
  (list [-1 -1] [0 -1] [1 -1]
        [-1 0] [1 0]
        [-1 1] [0 1] [1 1]))

(defn count-seats
  [state [sx sy]]
  (->> surrounding-seats
       (map (fn [[x y]] [(+ sx x) (+ sy y)]))
       (map (fn [seat] (get state seat)))
       (count-seats-in-list)))

(defn boarding-chaos-rules-seat
  [state [seat type]]
  (if (= \. type)
    [seat type]
    (let [counted (count-seats state seat)]
      (cond
        (and (= \L type) (= (get counted \#) 0))
        [seat \#]

        (and (= \# type) (>= (get counted \#) 4))
        [seat \L]

        :else
        [seat type]))))

(defn boarding-chaos-rules
  {:test (fn []
           (is= (boarding-chaos-rules (string->state ex-step-1))
                (string->state ex-step-2))
           (is= (boarding-chaos-rules (string->state ex-step-2))
                (string->state ex-step-3)))}
  [state]
  (->> state
       (map (fn [seat]
              (let [[k v] (boarding-chaos-rules-seat state seat)]
                {k v})))
       (reduce merge)))

(defn get-non-changing-state
  {:test (fn []
           (is= (get-non-changing-state (string->state ex-non-changing))
                (string->state ex-non-changing))
           (is= (get-non-changing-state (string->state ex-step-1))
                (string->state ex-non-changing)))}
  [state]
  (loop [state state]
    (let [new-state (boarding-chaos-rules state)]
      (if (= state new-state)
        new-state
        (recur new-state)))))

(defn day11part1
  {:test (fn [] (is= (day11part1 ex-step-1) 37))}
  [string]
  (->> string
       (string->state)
       (get-non-changing-state)
       (vals)
       (filter (fn [c] (= \# c)))
       (count)))

(def puzzle "LLLLLLL.L.LL.L.LLLL.LLLLLLL.LLLLL.LLLLLL.LLLLLLL.L.LLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLL..LLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL.LLLL..LL.L.LLLLLLLLLLLLLLLLLLL.LLLL.\nLLLLLLLLL.LLLL.LLLL.LLL.LLL.LLLLL.L.LLLL.LLLL.LLLLLLLL.LLLLLLLLL.LL.LL.LLLLLLL.L.LLLL.LLLLL\nLLLLLLLLLLLLLL.LLLLLLLLLLL..LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLL.LLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLLLLLLL..LLLLLLLL.LLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.L..L.LLLLLLL.LLLLL.LLLLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL..LLLLLL.LLLLLLLLLLLL.LLLLLLLL.LLL.LL.LLLLLLLLL.LLLL.LLLLL\n.L......LL..LL.LLL..L...L...L.............L........L.L......L..L...LLL....LLL..L..LL.....LL\nLLLLLLL.LLLL.L.LLLLLL.LLLLL.LLLLL.LLLLLL.LLL.LLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LL.LL\nLLLLLLLLL.LLLL.LLLL..LLLLLL.LLLLL.LL.LL.LLLLLLLLLLLLL..LLL.LLLLLLLLLLLLLLL.LLLLL.LLLL.LLL.L\nLLLL.LLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLL.L.LLL.LLLLLLLL.LLLLL..LLLLLLLLLLLLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLLLLLLLL.LLLLLL.LLLLLLLLLLLL..LLLLLLLLLLLLLLLLLLLLLLL.L.LLLLLLLLLL\nLLLLLLLLL.LLLL.L.LL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL..LLLLL.LLLLLLLLL.LLL..LLLLL\nLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLL.LLLL.L.LLLLLLL.LLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLL.LLLLL\nLLLLLLLLLLLLLL.LLLLLLLLLLLL.L.LLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLL.LLL.LL.L.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.L.LLLLLLLLLLLLLL.LLLL.LLLLL\n.L....L..L....L...L..L..LL..L..L...LLL.LLL.L..........LL.L.LL..L.L...LLL..........L....LL.L\nLLLLLLLLL.LLLL.LLLL.LL.LLLLLLLL.L.LLLLLL..LLLLLL.LLLLL.LLLLL.LL.LLLLL..LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLL.LLLLLLLL.LLLL.L.LLL.LLLLLLLLLLLLLLLLLL.LLLLL..LLLLLLLLL.LLLLLLLL.L\nLLL.LLLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLL.LL.LLLL.LLLL..LLLLLLLL.LL.LLLLLLLLLL.LL.LLLL.LLLLL\nLLLLLLLLL.LL.LLLLLLL.LLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLL.LLL.LLLL.LLLLLL.LLLLLLLLL.LLLLLLLLLL\nLL...LLLL.LLLL.LLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLL..LLLLLLLLL.LLLL.LLL.L\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL..LLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLL.L.LLLL.LLLL.LLLL.LLLLL\n..LL.LLLL.LLLLLLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLL.LLLLLL.LLLLLLLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLL.LLLLL.LLLLLLL..LLLLLL.LLLLLLLLL.LL.L.LLLL.\nLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLL.LLLLLL.LLLLL.L.LLLLL.LLLLLLLL.LLLLLL.LLLL.LLLL.LLLLLLLLLL\nL........L.LL.....L..L...L....L....L.LL..L.........L..L..L......L.......L...L..L..........L\nLLLLLLLLLLLLLL.LLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLL.LL.LLL.LLLLLLL.LLLLL.LLLLLLLL.L.LLLLL.LLLLLLLL.LLLL.LLLLL\nLLLLLLLLLLLL.L.LLLL.LL.LLLLLLLL.L..LLLLLLLLLLLLL.LLLLLL.LLLLLLL..LLLLLLL.LLLLLL..LLLL.LLLLL\nLLLLLLLLL.L.LL.LLLL.LLLLLLL.LLLLL.LLLLLL.LLL.LL.LLLLL..LLLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLL\nLLLLLLL.LLLLLLLLLL..LLL.LLLLLLLLL.LLLLLL.LLLLLLL.LLLLL.L.LLL.LL.LLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.L.LL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLL..LLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLL.\n..L.L.....LL.L.L..L.L....LLLL.L.L..L..L.L.L.......LL.L...LL..L.L.....L....L....LLL....L.L..\nLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLL.LL\nLL.LLLLLLLL.LLLLLLLLLLLLLLL.LLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLLLLLLLL.LLL.L.LLLLL.LLLLL.LLLLLLLLLLLLLLLLL.LL.LLLLLLLL.LL..LLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLLL.LLLLL.LL.LLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLLLLLLLLLLLL..LLL.LLLLL\nLLLLLLL.L.LLLL.LLLLLLLLLLLLLLLLLL.LLLLLL.LLLLLLL.LLL.L.LLLLLLLL.LLLLLL.LLLLLLLLLLLLL..LLLLL\nLLLL.LLLL.LLLL.LLLL.LLLLLL.LLLLLL.LLLLL.LLLLLLLLLLLLLL.LLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLL\n...L.........LL.L..L.L.L......LL.......L........L...LL...LL.LL.........L...LL...L.LLL..L.L.\nLLLLLLLLLLLLLL.LLLLL.LLLLLL.LLLLL.LLLLLL.LLLLLLLLLLLLLLLLLL.LLL.LLLLLLLLLLLLLL.L.LLLL.LLLLL\nLL..LLLLL.L.LL.LLLL.LLLL.LL.LLLLL.LLLLLL.LLLLL.LLLLLLL.LLLLLLLL.LLLLL..LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLL.LLL.L.LL.LLLLL\nLLLLLLLLLLLLLLLLLLL.LLLLLLL..LLLL.LLLLLL.LLLLL.L.LLL.LLLLLLLLLL.LLLLLL..LLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLLLLLLL.LLLLLLL.LLLLLLLLL.LLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLL.LLL.LLLLL\n..LL..LL....LL......L......LLL.L......L.L.L.L....L.LL....L...L.....L...L.L...LL....L.L.....\nLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLL.LLLLLL.LLLLL.L.LLLLL.LLLLL.LLLLLLLLL..LLLLLLLL.LLLLLLL.LL\nLLL.LLLLL.LLLLLL.LL.LLLLLLL.LLLLL.LLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLLLLLLLL.L.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLL.LLLLLL.LLLLLLL.L.LLL..LLLLLLLLLLL.LL.LLLLLLLLLLLL.L.LLLLL\nLLLLLLLLL.LLLL.L.LL.L.LLLLL.LLLLLLLLLLLL..LLLLL.LLLLL.LLL.LLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLL.LLL.LLLL.LLLL.LLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLLLLL.LLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLLLL.LLL.LLLLLLLLLLL.LLL.LLLLLLLLLLLLLL..LLLLLL.LLLLLLLLLLLLL.LLLLL\nL.L.LL.L.....L...L.........LLLL.....L.L..LL.LL..L.L.....L.....L..L.L.L....L.L..L..L..LL..LL\nLLLLL.LLL.LLLL.LLLL.LLLLLLL.LL.LL..LLLLL.LLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LL.L.LL.LL\nLLLLLLLLL.LLLL.LLL..LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLL.LLLL.LL.LLLL.LLLLL.LLL.LL.LL.LLLL.L.LLL.LLLLLLLLLLLLLLLLLLLLLL.LL..LLL.LLLLL\nLLLLLLLLL.LLLLLLL.L.LLLLLLL.LLLL..LLLLLL.LLL.LLL.LLLLL.LLLLLLLL.LLLLLLLLLLLLLLLLL.LLL.LLLL.\nLLLLLLLLL.LLLL.LLLL.LLLLLLLLLLL.L.LLLLLL..LLLLLL.LLLLL.LLLLLLL.LL.LLLLLLLLLLLLLLLLLLLLLLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLL.LLLLLL..L.LLLLLLLLLLLL.LLLLLLLLLLL.LL.L...LL.LLLLL\nL.L.L.LLL.L....L...L...L.LL..LL....LLLLL.L..LLL...L..L.......L.LL...L.L.L......LL...L.L.L.L\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL.L.LLLL.LLLLLLL.L.LLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLL..LLLLLLLL.LLLLLLLLLLLLLLLL.LLL..LLLLL\nLLLLLLLLL.LLLLLLLLL.LLLLLLLLLLLLL.LLLLLL.LLLLLLLLLL.LL.LLLLLLLL.LLLLLL.LLLLLLLLLLLLLLLLLLLL\nLLL.LLLLL.LLLLL.LL..LLLL.LLLLLLLL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.L.LLLLL.LLLLL.LLLLLL.LL.LLLLLLLLL..LLLLLLLL.LLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLLLLLLLL.LLL.LLLL.LLLL.LL.LLLLL.LLLLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLLLLLLLLLLLLL.LLLL.LLLLL\nLLLLLLLLLLLLLL.LLLL.LLLLLLL.LLLLL..LLLLL..LLLLLLL.LLLLLLLLLLLLL.LLLLLLLLLLLLLLLL.LLLLLLL.LL\nLLLLLLL.LLLLL..LLLL.LLLLLLLLLLLLL.LLLLLL.L.LLLLL.LLLLLLLLLLLLLLLLLLLLL.L.LLLL.LL.LLLLLLLLLL\nLLLL.LLLL.LLLL.LLLLLLLLLLLL.LLLLL.LLLL.L.LLLLLLLLLLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLLLLL\n................L...LLL..LL....L.....L..L.LL..L....LL.L...LL.LL..L.L.L.....LLL.L....L.....L\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLLL.LLLLLLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLL..LLLLL.LL.LLL.LLLLLLLLLLLLL.LL.LLLLL.LLLLLL.LLL.LLLLL.LLLL.LLLLL\nLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLL.LLLL.LLLLLLLLLLLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLL.LLLLLL.LLLL.LL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLLLLLLLLLLLLLLL.LLLLLLL.LLL..LLLLLLLLLLLLL.LLLLLLL.LLLLLLLL..LLLLLLLLLLLL.L.LLL\n.LL...LLL.L.LL.LLLL.LLLLLLL.LLLL.LLLLLLL.LLLLLLL.LLLLLLLLLLLLLL.LLLL.LLLLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLLLLLLL.LLLLLLL.LLLLL.LL.LLL.LLLLLLLLLLL.L.LLLLLLLLLLLLLLL.LLLLLLLLL.LLL.LLLLLL\nLLLLLLLLL.LLLL.L.LL.LLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLLLLLLLLLLLLLLLLL.LLLLLLLLL.LLLL.LLLLL\n....L...L....LL.L.L..L.L..L...LL....LL.....L.L...LL.L.L.......LL.L....LLL...L..LL.L....LLLL\nLLLLLLLLL.LL.LLLLLLLLLLLLLL.LLLLLLLLLLLL.LLLLLLLLLLLLL.LLLLLLLL.LLLLLLL.LLLLLLLL.LLLLLLLLLL\nLLLLLLLLLLLLLL.LLLL.L.LLLLL.LLLLLLLLLLLL..LLLLLL.LLLLLLLLLLLLLLLLLLLLL.LLLLLLLLLLLLLL.LLLLL\nLLLLLLLL.L.LL..LLL..LLLLLLLLLLLLLLLLLLLL.LLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLLLLLLLLLLLL.LLLL.LL.LLLLL.LLLLLL.LLLLLLL.L.LLL.LLLLLLLL.LLLLLLLLLLLLLLLL.LLLL.LLLLL\nLLLLLLLLL.LLLL.LLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLL.LLLLL.LLLLLLLL.LLLLLL.LLLLLLLLL.LLLLLLLLLL\nLLLLLLLLL.LLLL.LLLLLLLLLLL.LLLLLL.LLLLLL.LLLLLLL.LLLLL.LLLLLLLLLLLLLL..LLLLLLLLL.LLLLLLLLLL\n\n")
(comment
  (time (day11part1 puzzle))
  ; "Elapsed time: 5286.568175 msecs"
  ; => 2166
  )






